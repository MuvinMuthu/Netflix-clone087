image: ubuntu:latest

stages:
  - build
  - scan
  - deploy

variables:
  DOCKER_TAG: "muvinmuthuramalingam2017/netflix:latest"
  TMDB_V3_API_KEY: e1464541c6df1f01cdc5b44e1bd3b74c  # Set in GitLab CI/CD variables
  DOCKER_PASSWORD: Mylingam@087  # Set in GitLab CI/CD variables

before_script:
  # Install Docker
  - apt-get update && apt-get install -y docker.io
  - service docker start

build:
  stage: build
  tags:
    - ec2  # Adjust as needed based on your runner
  script:
    # Checkout the repository (this is automatic in GitLab CI/CD)
    # Build the Docker image with the TMDB API key and push to Docker Hub
    - docker build --build-arg TMDB_V3_API_KEY=e1464541c6df1f01cdc5b44e1bd3b74c -t netflix .
    - docker tag netflix $DOCKER_TAG
    - docker login -u muvinmuthuramalingam2017 -p dckr_pat_22YL5xAoSw0LWlijatpjgO8oM4g
    - docker push $DOCKER_TAG

trivy_scan:
  stage: scan
  tags:
    - ec2  # Adjust as needed based on your runner
  script:
    # Install Trivy
    - apt-get update && apt-get install -y wget apt-transport-https gnupg lsb-release
    - wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | gpg --dearmor | tee /usr/share/keyrings/trivy.gpg > /dev/null
    - echo "deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | tee -a /etc/apt/sources.list.d/trivy.list
    - apt-get update && apt-get install -y trivy

    # Run Trivy file system scan
    - trivy fs --download-db-only || true
    - trivy fs .

    # Run Trivy image scan with retries to handle rate limits
    - for i in {1..5}; do
        trivy image $DOCKER_TAG && break || sleep 30;
      done

deploy:
  stage: deploy
  tags:
    - ec2  # Adjust as needed based on your runner
  script:
    # Pull the Docker image from Docker Hub
    - docker pull $DOCKER_TAG
    # Stop and remove any existing container named 'netflix'
    - if [ $(docker ps -q --filter "name=netflix") ]; then docker stop netflix && docker rm netflix; fi
    # Run the new Docker container on port 8081
    - docker run -d --name netflix -p 8081:80 $DOCKER_TAG
    # Cleanup unused Docker images
    - docker image prune -f
