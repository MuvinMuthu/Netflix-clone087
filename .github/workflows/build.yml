pipeline {
    agent any

    environment {
        SONAR_TOKEN = 'sqp_b909a81178736b683f43c3d04f21b8616dfce09d'
        SONAR_HOST_URL = 'http://47.128.78.109:9000'
        TMDB_V3_API_KEY = 'e1464541c6df1f01cdc5b44e1bd3b74c'
        DOCKER_USER = 'muvinmuthuramalingam2017'
        DOCKER_PASS = 'dckr_pat_22YL5xAoSw0LWlijatpjgO8oM4g'
    }

    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'main', url: 'https://github.com/MuvinMuthu/Netflix-clone087.git'
            }
        }

        stage('SonarQube Scan') {
            steps {
                withSonarQubeEnv('SonarQube') { 
                    sh 'sonar-scanner -Dsonar.projectKey=your-project-key -Dsonar.host.url=$SONAR_HOST_URL -Dsonar.login=$SONAR_TOKEN'
                }
            }
        }

        stage('Install Trivy') {
            steps {
                sh '''
                sudo apt-get update
                sudo apt-get install wget apt-transport-https gnupg lsb-release -y
                wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | gpg --dearmor | sudo tee /usr/share/keyrings/trivy.gpg > /dev/null
                echo "deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
                sudo apt-get update
                sudo apt-get install trivy -y
                '''
            }
        }

        stage('Cache Trivy Database') {
            steps {
                sh '''
                trivy fs --download-db-only || true
                '''
            }
        }

        stage('Run Trivy File System Scan') {
            steps {
                sh 'trivy fs .'
            }
        }

        stage('Docker Build and Push') {
            steps {
                sh '''
                docker build --build-arg TMDB_V3_API_KEY=$TMDB_V3_API_KEY -t netflix .
                docker tag netflix $DOCKER_USER/netflix:latest
                echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
                docker push $DOCKER_USER/netflix:latest
                '''
            }
        }

        stage('Deploy') {
            steps {
                sh '''
                sudo apt-get update
                sudo apt-get install wget apt-transport-https gnupg lsb-release -y
                wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | gpg --dearmor | sudo tee /usr/share/keyrings/trivy.gpg > /dev/null
                echo "deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
                sudo apt-get update
                sudo apt-get install trivy -y
                docker pull $DOCKER_USER/netflix:latest
                for i in {1..5}; do
                    trivy image $DOCKER_USER/netflix:latest && break || sleep 30;
                done
                docker run -d --name netflix -p 8081:80 $DOCKER_USER/netflix:latest
                '''
            }
        }
    }
}
